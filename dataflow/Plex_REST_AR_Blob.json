{
	"name": "Plex_REST_AR_Blob",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Plex_REST_AR_Invoice_List",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AR_Invoice_Json_Blob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          invoiceNumber as string,",
				"          customerId as string,",
				"          customerCode as string,",
				"          customerBillToId as string,",
				"          customerBillToCode as string,",
				"          customerShipToId as string,",
				"          customerShipToCode as string,",
				"          buildingCode as string,",
				"          periodDisplay as string,",
				"          transactionDate as string,",
				"          currencyCode as string,",
				"          exchangeRate as integer,",
				"          terms as string,",
				"          dueDate as string,",
				"          invoiceNote as string,",
				"          internalNote as string,",
				"          voucherNumber as string,",
				"          status as string,",
				"          governmentIssuedNumber as string,",
				"          type as string,",
				"          createdById as string,",
				"          createdDate as string,",
				"          modifiedById as string,",
				"          modifiedDate as string,",
				"          taxableDate as string,",
				"          amount as double,",
				"          currencyAmount as double,",
				"          paid as boolean,",
				"          paidDate as string,",
				"          paidPeriod as string,",
				"          discount as double,",
				"          balance as double,",
				"          currencyBalance as double,",
				"          void as boolean,",
				"          consolidatedLinkId as string,",
				"          booked as boolean,",
				"          lines as (accountNumber as string, accountId as string, baseSegment as string, costCenterSegment as string, subAccountSegment as string, description as string, credit as integer, debit as double, currencyCredit as integer, currencyDebit as double, unitPrice as integer, quantity as integer, accountingJobNumber as string, taxes as string[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				" sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          invoiceNumber as string,",
				"          customerId as string,",
				"          customerCode as string,",
				"          customerBillToId as string,",
				"          customerBillToCode as string,",
				"          customerShipToId as string,",
				"          customerShipToCode as string,",
				"          buildingCode as string,",
				"          periodDisplay as string,",
				"          transactionDate as string,",
				"          currencyCode as string,",
				"          exchangeRate as integer,",
				"          terms as string,",
				"          dueDate as string,",
				"          invoiceNote as string,",
				"          internalNote as string,",
				"          voucherNumber as string,",
				"          status as string,",
				"          governmentIssuedNumber as string,",
				"          type as string,",
				"          createdById as string,",
				"          createdDate as string,",
				"          modifiedById as string,",
				"          modifiedDate as string,",
				"          taxableDate as string,",
				"          amount as double,",
				"          currencyAmount as double,",
				"          paid as boolean,",
				"          paidDate as string,",
				"          paidPeriod as string,",
				"          discount as double,",
				"          balance as double,",
				"          currencyBalance as double,",
				"          void as boolean,",
				"          consolidatedLinkId as string,",
				"          booked as boolean,",
				"          lines as (accountNumber as string, accountId as string, baseSegment as string, costCenterSegment as string, subAccountSegment as string, description as string, credit as integer, debit as double, currencyCredit as integer, currencyDebit as double, unitPrice as integer, quantity as integer, accountingJobNumber as string, taxes as string[])[]",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}